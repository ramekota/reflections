How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I used diff command to find differences between two files. This command was able to point the differences between the version

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

   That will help me either to identify differences between versions and also quickly revert to the working version in case of major issues with the current version


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Avoid multiple versions with minor or no changes to the code 
    
   Cons: Any manual overlook might cause missing huge code changes


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

     To ensure all the related files are baselined for each commit 

How can you use the commands git log and git diff to view the history of files?

   git log will help in identify the commits and reason for change . A commit id is created for each commit
   git diff will help in identifying the actual different between 2 version using commit id 

How might using version control make you more confident to make changes that
could break something?

since it is a simple process to revert to working version of the code using git checkout

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
